(ns functionhunter.handler
    (:require [compojure.route :as route]
            [compojure.core :refer [GET defroutes]]
            [ring.util.response :refer [resource-response response]]
            [ring.middleware.json :as middleware]
            [ring.middleware.defaults :refer [wrap-defaults api-defaults]]
	    [ring.middleware.content-type :as wrapme]))


(defn what-is-my-ip [request]
      {:status 200
       :headers {"Content-Type" "text/plain"}
       :body (:remote-adder request)})

(defn wrap-content-type [handler content-type]
  (fn [request]
    (let [response (handler request)]
      (assoc-in response [:headers "Content-Type"] content-type))))


(defroutes app-routes
  (GET  "/" [] (resource-response "index.html" {:root "public"}))
  (GET  "/widgets" [] (response [{:name "Test case"} {:name "I am Data!!!"}]))
  (GET  "/dean/:id" [id] (str "<h1>Hi Dean, your number is : " id "</h1>"))
  (GET  "/submission" request (str request))
  (route/resources "/")
  (route/not-found "Page not found"))


(def app
  (-> app-routes
      (middleware/wrap-json-body)
      (middleware/wrap-json-response)
      (wrap-defaults api-defaults)))
